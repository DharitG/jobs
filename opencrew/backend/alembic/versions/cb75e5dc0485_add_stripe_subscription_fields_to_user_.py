"""Add stripe subscription fields to user model

Revision ID: cb75e5dc0485
Revises: 0002
Create Date: 2025-04-21 00:55:39.142200

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'cb75e5dc0485'
down_revision: Union[str, None] = '0002'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('applications',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('job_id', sa.Integer(), nullable=False),
    sa.Column('resume_id', sa.Integer(), nullable=True),
    sa.Column('status', sa.Enum('SAVED', 'APPLYING', 'APPLIED', 'ASSESSMENT', 'INTERVIEW', 'OFFER', 'REJECTED', 'WITHDRAWN', name='applicationstatus'), nullable=False),
    sa.Column('status_last_updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('applied_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['job_id'], ['jobs.id'], ),
    sa.ForeignKeyConstraint(['resume_id'], ['resumes.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_applications_id'), 'applications', ['id'], unique=False)
    op.create_index(op.f('ix_applications_job_id'), 'applications', ['job_id'], unique=False)
    op.create_index(op.f('ix_applications_status'), 'applications', ['status'], unique=False)
    op.create_index(op.f('ix_applications_user_id'), 'applications', ['user_id'], unique=False)
    op.add_column('jobs', sa.Column('visa_sponsorship_available', sa.Boolean(), nullable=True))
    op.add_column('jobs', sa.Column('created_at', sa.DateTime(), nullable=True))
    op.add_column('jobs', sa.Column('updated_at', sa.DateTime(), nullable=True))
    op.alter_column('jobs', 'date_posted',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               existing_nullable=True)
    op.drop_constraint('jobs_url_key', 'jobs', type_='unique')
    op.create_index(op.f('ix_jobs_location'), 'jobs', ['location'], unique=False)
    op.create_index(op.f('ix_jobs_url'), 'jobs', ['url'], unique=True)
    op.drop_column('jobs', 'embedding')
    op.drop_column('jobs', 'date_scraped')
    op.add_column('resumes', sa.Column('embedding', sa.JSON(), nullable=True))
    op.add_column('resumes', sa.Column('original_filepath', sa.String(), nullable=True))
    op.add_column('resumes', sa.Column('converted_filepath', sa.String(), nullable=True))
    op.add_column('resumes', sa.Column('modified_filepath', sa.String(), nullable=True))
    op.add_column('resumes', sa.Column('exported_filepath', sa.String(), nullable=True))
    op.add_column('resumes', sa.Column('optimization_diffs', sa.JSON(), nullable=True))
    op.add_column('users', sa.Column('auth0_sub', sa.String(), nullable=False))
    op.add_column('users', sa.Column('first_name', sa.String(), nullable=True))
    op.add_column('users', sa.Column('last_name', sa.String(), nullable=True))
    op.add_column('users', sa.Column('phone_number', sa.String(), nullable=True))
    op.add_column('users', sa.Column('linkedin_url', sa.String(), nullable=True))
    # Create the ENUM type explicitly first
    op.execute("CREATE TYPE subscriptiontier AS ENUM ('FREE', 'PRO', 'ELITE')")
    op.add_column('users', sa.Column('subscription_tier', sa.Enum('FREE', 'PRO', 'ELITE', name='subscriptiontier', create_type=False), nullable=False)) # Set create_type=False as we created it manually
    op.add_column('users', sa.Column('current_streak', sa.Integer(), nullable=False))
    op.add_column('users', sa.Column('last_streak_update', sa.DateTime(), nullable=True))
    op.add_column('users', sa.Column('stripe_customer_id', sa.String(), nullable=True))
    op.add_column('users', sa.Column('stripe_subscription_id', sa.String(), nullable=True))
    op.add_column('users', sa.Column('stripe_subscription_status', sa.String(), nullable=True))
    op.add_column('users', sa.Column('subscription_current_period_end', sa.DateTime(), nullable=True))
    op.create_index(op.f('ix_users_auth0_sub'), 'users', ['auth0_sub'], unique=True)
    op.create_index(op.f('ix_users_stripe_customer_id'), 'users', ['stripe_customer_id'], unique=True)
    op.create_index(op.f('ix_users_stripe_subscription_id'), 'users', ['stripe_subscription_id'], unique=True)
    op.create_index(op.f('ix_users_stripe_subscription_status'), 'users', ['stripe_subscription_status'], unique=False)
    op.drop_column('users', 'hashed_password')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('hashed_password', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.drop_index(op.f('ix_users_stripe_subscription_status'), table_name='users')
    op.drop_index(op.f('ix_users_stripe_subscription_id'), table_name='users')
    op.drop_index(op.f('ix_users_stripe_customer_id'), table_name='users')
    op.drop_index(op.f('ix_users_auth0_sub'), table_name='users')
    op.drop_column('users', 'subscription_current_period_end')
    op.drop_column('users', 'stripe_subscription_status')
    op.drop_column('users', 'stripe_subscription_id')
    op.drop_column('users', 'stripe_customer_id')
    op.drop_column('users', 'last_streak_update')
    op.drop_column('users', 'current_streak')
    op.drop_column('users', 'subscription_tier')
    # Drop the ENUM type after dropping the column that uses it
    op.execute("DROP TYPE subscriptiontier")
    op.drop_column('users', 'linkedin_url')
    op.drop_column('users', 'phone_number')
    op.drop_column('users', 'last_name')
    op.drop_column('users', 'first_name')
    op.drop_column('users', 'auth0_sub')
    op.drop_column('resumes', 'optimization_diffs')
    op.drop_column('resumes', 'exported_filepath')
    op.drop_column('resumes', 'modified_filepath')
    op.drop_column('resumes', 'converted_filepath')
    op.drop_column('resumes', 'original_filepath')
    op.drop_column('resumes', 'embedding')
    op.add_column('jobs', sa.Column('date_scraped', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True))
    op.add_column('jobs', sa.Column('embedding', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.drop_index(op.f('ix_jobs_url'), table_name='jobs')
    op.drop_index(op.f('ix_jobs_location'), table_name='jobs')
    op.create_unique_constraint('jobs_url_key', 'jobs', ['url'])
    op.alter_column('jobs', 'date_posted',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               existing_nullable=True)
    op.drop_column('jobs', 'updated_at')
    op.drop_column('jobs', 'created_at')
    op.drop_column('jobs', 'visa_sponsorship_available')
    op.drop_index(op.f('ix_applications_user_id'), table_name='applications')
    op.drop_index(op.f('ix_applications_status'), table_name='applications')
    op.drop_index(op.f('ix_applications_job_id'), table_name='applications')
    op.drop_index(op.f('ix_applications_id'), table_name='applications')
    op.drop_table('applications')
    # ### end Alembic commands ### 